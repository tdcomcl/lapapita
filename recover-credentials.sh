#!/bin/bash
#
# üîç RECUPERAR CREDENCIALES - LA PAPITA
# Ejecutar como: sudo bash recover-credentials.sh
#

# Colores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${GREEN}"
echo "üîç RECUPERANDO CREDENCIALES - LA PAPITA"
echo "======================================"
echo -e "${NC}"

APP_DIR="/home/lapapita/lapapita"

# Verificar si la aplicaci√≥n existe
if [ ! -d "$APP_DIR" ]; then
    echo -e "${RED}‚ùå No se encontr√≥ la aplicaci√≥n en $APP_DIR${NC}"
    echo -e "${YELLOW}Parece que el deployment no se complet√≥ correctamente${NC}"
    exit 1
fi

echo -e "${BLUE}üìÅ Aplicaci√≥n encontrada en: $APP_DIR${NC}"

# Leer variables de entorno del backend
if [ -f "$APP_DIR/backend/.env" ]; then
    echo -e "${GREEN}‚úÖ Archivo .env encontrado${NC}"
    
    # Extraer informaci√≥n
    DB_URL=$(grep "DATABASE_URL" "$APP_DIR/backend/.env" | cut -d'=' -f2)
    JWT_SECRET=$(grep "JWT_SECRET" "$APP_DIR/backend/.env" | cut -d'=' -f2)
    COOKIE_SECRET=$(grep "COOKIE_SECRET" "$APP_DIR/backend/.env" | cut -d'=' -f2)
    
    # Extraer credenciales de la URL de base de datos
    if [ ! -z "$DB_URL" ]; then
        DB_USER=$(echo $DB_URL | sed 's/.*:\/\/\([^:]*\):.*/\1/')
        DB_PASSWORD=$(echo $DB_URL | sed 's/.*:\/\/[^:]*:\([^@]*\)@.*/\1/')
        DB_NAME=$(echo $DB_URL | sed 's/.*\/\([^?]*\).*/\1/')
    fi
else
    echo -e "${RED}‚ùå No se encontr√≥ el archivo .env${NC}"
    DB_USER="lapapita"
    DB_NAME="lapapita_db"
    DB_PASSWORD="NO_ENCONTRADA"
fi

# Verificar PM2
PM2_STATUS=$(sudo -u lapapita pm2 status 2>/dev/null | grep -c "online" || echo "0")

# Verificar servicios
PG_STATUS=$(systemctl is-active postgresql 2>/dev/null || echo "inactive")
NGINX_STATUS=$(systemctl is-active nginx 2>/dev/null || echo "inactive")

# Crear archivo de credenciales recuperadas
sudo -u lapapita cat > $APP_DIR/CREDENCIALES_RECUPERADAS.txt << EOF
üîç LA PAPITA - CREDENCIALES RECUPERADAS
======================================
Fecha de recuperaci√≥n: $(date)

üåê DOMINIO: lapapita.cl
üìß Admin Panel: https://lapapita.cl/admin
üè™ Tienda: https://lapapita.cl

üóÑÔ∏è BASE DE DATOS POSTGRESQL:
‚Ä¢ Host: localhost:5432
‚Ä¢ Usuario: $DB_USER
‚Ä¢ Contrase√±a: $DB_PASSWORD
‚Ä¢ Base de datos: $DB_NAME
‚Ä¢ Conexi√≥n: postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME

üîê SECRETS:
‚Ä¢ JWT_SECRET: $JWT_SECRET
‚Ä¢ COOKIE_SECRET: $COOKIE_SECRET

üìä ESTADO DE SERVICIOS:
‚Ä¢ PostgreSQL: $PG_STATUS
‚Ä¢ Nginx: $NGINX_STATUS
‚Ä¢ PM2 Apps online: $PM2_STATUS

üìÅ DIRECTORIOS:
‚Ä¢ Aplicaci√≥n: $APP_DIR
‚Ä¢ Usuario del sistema: lapapita

üõ†Ô∏è COMANDOS √öTILES:
‚Ä¢ sudo -u lapapita pm2 status
‚Ä¢ sudo -u lapapita pm2 logs
‚Ä¢ sudo -u lapapita pm2 restart all
‚Ä¢ sudo systemctl status postgresql
‚Ä¢ sudo systemctl status nginx

‚ö†Ô∏è NOTA: Este archivo fue generado por el script de recuperaci√≥n.
EOF

echo -e "${GREEN}"
echo "üìã CREDENCIALES RECUPERADAS"
echo "=========================="
echo -e "${NC}"
echo -e "${BLUE}üåê Dominio: lapapita.cl${NC}"
echo -e "${BLUE}üìß Admin: https://lapapita.cl/admin${NC}"
echo
echo -e "${YELLOW}üóÑÔ∏è Base de Datos:${NC}"
echo -e "${BLUE}‚Ä¢ Usuario: $DB_USER${NC}"
echo -e "${BLUE}‚Ä¢ Contrase√±a: $DB_PASSWORD${NC}"
echo -e "${BLUE}‚Ä¢ Base de datos: $DB_NAME${NC}"
echo
echo -e "${YELLOW}üìä Estado:${NC}"
echo -e "${BLUE}‚Ä¢ PostgreSQL: $PG_STATUS${NC}"
echo -e "${BLUE}‚Ä¢ Nginx: $NGINX_STATUS${NC}"
echo -e "${BLUE}‚Ä¢ PM2 Apps: $PM2_STATUS online${NC}"
echo
echo -e "${GREEN}üíæ Credenciales guardadas en: $APP_DIR/CREDENCIALES_RECUPERADAS.txt${NC}"

# Verificar conectividad
echo -e "${YELLOW}üîç Verificando conectividad...${NC}"

# Test PostgreSQL
if PGPASSWORD=$DB_PASSWORD psql -h localhost -U $DB_USER -d $DB_NAME -c "SELECT 1;" >/dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Conexi√≥n a PostgreSQL: OK${NC}"
else
    echo -e "${RED}‚ùå Conexi√≥n a PostgreSQL: ERROR${NC}"
fi

# Test puertos
if netstat -tlnp 2>/dev/null | grep -q ":8000"; then
    echo -e "${GREEN}‚úÖ Frontend (puerto 8000): OK${NC}"
else
    echo -e "${RED}‚ùå Frontend (puerto 8000): NO RESPONDE${NC}"
fi

if netstat -tlnp 2>/dev/null | grep -q ":9000"; then
    echo -e "${GREEN}‚úÖ Backend (puerto 9000): OK${NC}"
else
    echo -e "${RED}‚ùå Backend (puerto 9000): NO RESPONDE${NC}"
fi

echo -e "${GREEN}üîç Recuperaci√≥n completada${NC}" 